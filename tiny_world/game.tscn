[gd_scene load_steps=59 format=2]

[ext_resource path="res://instances/game/World.tscn" type="PackedScene" id=1]
[ext_resource path="res://instances/ui/Theme.tres" type="Theme" id=2]
[ext_resource path="res://assets/graphics/icons/population.png" type="Texture" id=3]
[ext_resource path="res://assets/graphics/icons/cash.png" type="Texture" id=4]
[ext_resource path="res://assets/graphics/icons/book.png" type="Texture" id=5]
[ext_resource path="res://assets/graphics/icons/play_thrice.png" type="Texture" id=6]
[ext_resource path="res://assets/graphics/icons/play_twice.png" type="Texture" id=7]
[ext_resource path="res://assets/graphics/icons/play.png" type="Texture" id=8]
[ext_resource path="res://assets/fonts/open_sans/OpenSans-Regular.ttf" type="DynamicFontData" id=9]
[ext_resource path="res://assets/graphics/icons/letter.png" type="Texture" id=10]
[ext_resource path="res://assets/graphics/icons/play_button.png" type="Texture" id=11]
[ext_resource path="res://assets/graphics/title.png" type="Texture" id=12]
[ext_resource path="res://assets/graphics/made_by_me.png" type="Texture" id=13]

[sub_resource type="GDScript" id=1]
script/source = "extends Node


func _ready():
	GameState.pause()
	var timer = Timer.new()
	add_child(timer)
	timer.connect(\"timeout\", GameState.notifications, \"send\", [Notifications.INDEX.WELCOME])
	timer.connect(\"timeout\", timer, \"queue_free\")
	timer.start(2)
	GameState.connect(\"game_paused_changed\", self, \"_on_unpause\")
	Audio.playMusic(Audio.MUSIC.BNW)
	
func _on_unpause():
	if !$World/World.visible:
		$World/World.visible = true
"

[sub_resource type="GDScript" id=2]
script/source = "extends Polygon2D

const INTERVAL = 3.0
var _interval:float = 0.0

enum STATE { FINE, NOT_FINE, ENDANGERED, DED }

var state = STATE.FINE setget setState

var fineColor = Color(\"72c1ce\")
var notFineColor = Color(\"64887c\")
var endangeredColor = Color(\"7b571a\")
var dedColor = Color(\"201916\")

func setState(value):
	if value != state:
		state = value
		match state:
			STATE.FINE:
				tweenColor(fineColor)
			STATE.NOT_FINE:
				tweenColor(notFineColor)
			STATE.ENDANGERED:
				tweenColor(endangeredColor)
			STATE.DED:
				tweenColor(dedColor)

func checkState():
	var _degradationTime = GameState.getPollutionCapacity() / max(GameState.getPollutionPerSecond(), 0.1)
	if _degradationTime >= 80.0:
		self.state = STATE.FINE
	elif _degradationTime >= 40.0:
		self.state = STATE.NOT_FINE
	elif _degradationTime >= 10.0:
		self.state = STATE.ENDANGERED
	else:
		self.state = STATE.DED

func tweenColor(_color):
	$Tween.remove_all()
	$Tween.interpolate_property(self, \"color\", self.color, _color, 10.0, Tween.TRANS_SINE)
	$Tween.start()

func _physics_process(delta):
	_interval += delta
	if _interval >= INTERVAL:
		_interval -= INTERVAL
		checkState()
"

[sub_resource type="GDScript" id=3]
script/source = "extends Node2D

const INTERVAL = 0.1
const SMOOTHNESS = 360

var radius = 32
var _tick:float = 0.0
var percentage:float = 0.0
var secondsLeft:int = 3000
var worldPolygon:PoolVector2Array = PoolVector2Array()

func updateRadius(_radius):
	radius = _radius * 0.75
	updateClock()
	
func updateClock():
	worldPolygon = PoolVector2Array()
	var _start = int(floor(percentage * (SMOOTHNESS + 1)))
	worldPolygon.push_back(Vector2.ZERO)
	for i in range(_start, SMOOTHNESS + 1):
		var _anglePoint = deg2rad(i * 360 / SMOOTHNESS - 90)
		worldPolygon.push_back(Vector2(cos(_anglePoint), sin(_anglePoint)) * self.radius)
	worldPolygon.push_back(Vector2.ZERO)
	update()
	
func _draw():
	draw_polygon(worldPolygon, PoolColorArray([Color(1, 1, 1, 0.5)]))
	
func _physics_process(delta):
	_tick += delta
	if _tick >= INTERVAL:
		_tick -= INTERVAL
		var _pps = GameState.getPollutionPerSecond()
		if _pps > 0:
			percentage = GameState._currentPollution / max(1, GameState.getPollutionCapacity())
			secondsLeft = int(ceil((GameState.getPollutionCapacity() - GameState._currentPollution) / _pps))
		else:
			percentage = 0.0
			secondsLeft = 300000
		updateClock()

func _ready():
	GameState.connect(\"skills_changed\", self, \"_on_skills_changed\")
	
func _on_skills_changed():
	if !visible:
		if GameState.skillProgress.hasSkill(Progress.SKILLS.DOOMSDAY_CLOCK):
			visible = true
"

[sub_resource type="GDScript" id=4]
script/source = "extends Camera2D

export var minZoom:float = 3.0
export var maxZoom:float = 0.4
export var zoomSpeed:float = 0.2
export var shakeIntensity:float = 8.0

var shaking:bool = false
var oldNodeCount:int = 0

func _init():
	GameState.camera = self

func _ready():
	GameState.connect(\"zoom_changed\", self, \"_on_zoom_changed\")
	GameState.connect(\"currentNodes_changed\", self, \"_on_nodes_changed\")
	$Timer.connect(\"timeout\", self, \"set\", [\"shaking\", false])
	_on_zoom_changed()
	oldNodeCount = len(GameState.currentNodes)

func _on_zoom_changed():
	$Tween.remove_all()
	$Tween.interpolate_property(self, \"zoom\", self.zoom, Vector2.ONE * (((1.0 - GameState.zoom) * (minZoom - maxZoom)) + maxZoom), zoomSpeed, Tween.TRANS_SINE)
	$Tween.start()

func _physics_process(delta):
	if shaking:
		self.position = Vector2(640, 360) + Vector2(rand_range(-shakeIntensity, shakeIntensity), rand_range(-shakeIntensity, shakeIntensity))
	else:
		self.position = Vector2(640, 360)
		
func _on_nodes_changed():
	if oldNodeCount > len(GameState.currentNodes):
		oldNodeCount = len(GameState.currentNodes)
		shaking = true
		$Timer.start(1.0)
		
"

[sub_resource type="StyleBoxFlat" id=5]
bg_color = Color( 0, 0, 0, 0.607843 )

[sub_resource type="GDScript" id=6]
script/source = "extends Panel

const INTERVAL = 0.5
var current:float = 0.0

func updateText():
	$Label.text = str(GameState.getPopulation())
	
func _process(delta):
	current += delta
	if current >= INTERVAL:
		current -= INTERVAL
		updateText()
"

[sub_resource type="GDScript" id=7]
script/source = "extends Panel


func _ready():
	$HSlider.connect(\"value_changed\", self, \"_on_change\")
	
func _on_change(__):
	GameState.populationWeight = $HSlider.value
"

[sub_resource type="StyleBoxFlat" id=8]
bg_color = Color( 0, 0, 0, 0.607843 )
corner_radius_bottom_left = 24

[sub_resource type="GDScript" id=9]
script/source = "extends Panel

const INTERVAL = 0.5
var current:float = 0.0

func updateText():
	$Label.text = str(GameState.getMaterials())
	
func _process(delta):
	current += delta
	if current >= INTERVAL:
		current -= INTERVAL
		updateText()
"

[sub_resource type="StyleBoxFlat" id=10]
bg_color = Color( 0, 0, 0, 0.607843 )
corner_radius_bottom_left = 24

[sub_resource type="GDScript" id=11]
script/source = "extends Panel

const INTERVAL = 0.5
var current:float = 0.0

func updateText():
	var _matsPerSecond = int(floor(GameState.getMaterialsPerSecond()))
	if _matsPerSecond < 0:
		$Label.text = \"-\" + str(_matsPerSecond) + \"/s\"
	else:
		$Label.text = \"+\" + str(_matsPerSecond) + \"/s\"
	
func _process(delta):
	current += delta
	if current >= INTERVAL:
		current -= INTERVAL
		updateText()
"

[sub_resource type="StyleBoxFlat" id=12]
bg_color = Color( 0, 0, 0, 0.607843 )
corner_radius_bottom_right = 24

[sub_resource type="GDScript" id=13]
script/source = "extends Panel

const INTERVAL = 0.5
var current:float = 0.0

func updateText():
	$Label.text = str(GameState.getResearch())
	
func _process(delta):
	current += delta
	if current >= INTERVAL:
		current -= INTERVAL
		updateText()
"

[sub_resource type="StyleBoxFlat" id=14]
bg_color = Color( 0, 0, 0, 0.607843 )
corner_radius_bottom_right = 24

[sub_resource type="GDScript" id=15]
script/source = "extends Panel

const INTERVAL = 0.5
var current:float = 0.0

func updateText():
	var _matsPerSecond = int(floor(GameState.getResearchPerSecond()))
	if _matsPerSecond < 0:
		$Label.text = \"-\" + str(_matsPerSecond) + \"/s\"
	else:
		$Label.text = \"+\" + str(_matsPerSecond) + \"/s\"
	
func _process(delta):
	current += delta
	if current >= INTERVAL:
		current -= INTERVAL
		updateText()
"

[sub_resource type="StyleBoxFlat" id=16]
bg_color = Color( 0, 0, 0, 0.607843 )
corner_radius_bottom_right = 24
corner_radius_bottom_left = 24

[sub_resource type="GDScript" id=17]
script/source = "extends Panel

const INTERVAL = 0.25
var current:float = 0.0

func updateText():
	$Tween.remove_all()
	$Tween.interpolate_property($ProgressBar, \"value\", $ProgressBar.value, GameState.getResearchPercent(), INTERVAL, Tween.TRANS_SINE)
	$Tween.start()
	
func _process(delta):
	current += delta
	if current >= INTERVAL:
		current -= INTERVAL
		updateText()
"

[sub_resource type="GDScript" id=18]
script/source = "extends Panel

const INTERVAL = 0.25
var current:float = 0.0

func updateText():
	$Tween.remove_all()
	$Tween.interpolate_property($ProgressBar, \"value\", $ProgressBar.value, GameState.getMaterialPercent(), INTERVAL, Tween.TRANS_SINE)
	$Tween.start()
	
func _process(delta):
	current += delta
	if current >= INTERVAL:
		current -= INTERVAL
		updateText()
"

[sub_resource type="GDScript" id=19]
script/source = "extends Control

var BuildButton = preload(\"res://instances/ui/BuildButton.tscn\")

func _ready():
	GameState.connect(\"currentNodes_changed\", self, \"_on_game_currentNodes_changed\")
	_on_game_currentNodes_changed()

func _on_game_currentNodes_changed():
	for child in get_children():
		child.call_deferred(\"queue_free\")
	for building in GameState.currentNodes:
		var button = BuildButton.instance()
		button.init(building)
		add_child(button)
"

[sub_resource type="StyleBoxFlat" id=20]
bg_color = Color( 0, 0, 0, 0.607843 )
corner_radius_top_left = 24
corner_radius_top_right = 24

[sub_resource type="GDScript" id=21]
script/source = "extends Button

func _ready():
	self.connect(\"pressed\", self, \"_on_pressed\")

func _on_pressed():
	GameState.setZoom(GameState.zoom - $\"../ZoomSlider\".step)
"

[sub_resource type="GDScript" id=22]
script/source = "extends Button

func _ready():
	self.connect(\"pressed\", self, \"_on_pressed\")

func _on_pressed():
	GameState.setZoom(GameState.zoom + $\"../ZoomSlider\".step)
"

[sub_resource type="GDScript" id=23]
script/source = "extends HSlider


func _ready():
	self.connect(\"value_changed\", self, \"_on_changed\")
	GameState.connect(\"zoom_changed\", self, \"_on_zoom_changed\")
	_on_zoom_changed()

func _on_changed(_value:float):
	GameState.setZoom(_value)

func _on_zoom_changed():
	self.value = GameState.zoom
"

[sub_resource type="StyleBoxFlat" id=24]
bg_color = Color( 0, 0, 0, 0.607843 )
corner_radius_bottom_left = 24

[sub_resource type="GDScript" id=25]
script/source = "extends TextureButton


func _ready():
	self.connect(\"pressed\", self, \"_on_pressed\")
	GameState.connect(\"game_speed_changed\", self, \"_on_game_speed_change\")
	self.self_modulate = Color(1, 1, 1, 0.5)

	
func _on_pressed():
	Audio.playSound(Audio.SOUND.CLICK)
	GameState.setGameSpeed(4)

func _on_game_speed_change(_newSpeed):
	if _newSpeed == 4:
		self.self_modulate = Color.white
	else:
		self.self_modulate = Color(1, 1, 1, 0.5)
"

[sub_resource type="GDScript" id=26]
script/source = "extends TextureButton


func _ready():
	self.connect(\"pressed\", self, \"_on_pressed\")
	GameState.connect(\"game_speed_changed\", self, \"_on_game_speed_change\")
	self.self_modulate = Color(1, 1, 1, 0.5)

	
func _on_pressed():
	Audio.playSound(Audio.SOUND.CLICK)
	GameState.setGameSpeed(2)

func _on_game_speed_change(_newSpeed):
	if _newSpeed == 2:
		self.self_modulate = Color.white
	else:
		self.self_modulate = Color(1, 1, 1, 0.5)
"

[sub_resource type="GDScript" id=27]
script/source = "extends TextureButton


func _ready():
	self.connect(\"pressed\", self, \"_on_pressed\")
	GameState.connect(\"game_speed_changed\", self, \"_on_game_speed_change\")
	self.self_modulate = Color(1, 1, 1, 1)

	
func _on_pressed():
	Audio.playSound(Audio.SOUND.CLICK)
	GameState.setGameSpeed(1)

func _on_game_speed_change(_newSpeed):
	if _newSpeed == 1:
		self.self_modulate = Color.white
	else:
		self.self_modulate = Color(1, 1, 1, 0.5)
"

[sub_resource type="StyleBoxFlat" id=28]
bg_color = Color( 0, 0, 0, 0.607843 )
corner_radius_top_right = 24
corner_radius_bottom_right = 24

[sub_resource type="GDScript" id=29]
script/source = "extends Panel

var popIcon = preload(\"res://assets/graphics/icons/population.png\")
var cashIcon = preload(\"res://assets/graphics/icons/cash.png\")
var bookIcon = preload(\"res://assets/graphics/icons/book.png\")

var visibleVector = Vector2(0, 216)
var invisibleVector = Vector2(-320, 216)

var nameIndex = {
	BuildingNodeFactory.TYPE.HOUSING: {
		BuildingNodeFactory.HOUSING.CAMP: \"Camp\",
		BuildingNodeFactory.HOUSING.VILLAGE: \"Village\",
		BuildingNodeFactory.HOUSING.TOWN: \"Town\",
		BuildingNodeFactory.HOUSING.CITY: \"City\",
		BuildingNodeFactory.HOUSING.METROPOLIS: \"Metropolis\",
	},
	BuildingNodeFactory.TYPE.PRODUCTION: {
		BuildingNodeFactory.PRODUCTION.LUMBERYARD: \"Lumberyard\",
		BuildingNodeFactory.PRODUCTION.MINE: \"Mine\",
		BuildingNodeFactory.PRODUCTION.REFINERY: \"Refinery\",
		BuildingNodeFactory.PRODUCTION.FACTORY: \"Factory\",
		BuildingNodeFactory.PRODUCTION.PRODUCTIONPLANT: \"Production Plant\",
	},
	BuildingNodeFactory.TYPE.RESEARCH: {
		BuildingNodeFactory.RESEARCH.SCHOOL: \"School\",
		BuildingNodeFactory.RESEARCH.MUSEUM: \"Museum\",
		BuildingNodeFactory.RESEARCH.LIBRARY: \"Library\",
		BuildingNodeFactory.RESEARCH.COLLEGE: \"College\",
		BuildingNodeFactory.RESEARCH.UNIVERSITY: \"University\",
	}
}

func _ready():
	UIRouter.connect(\"building_hovered\", self, \"_on_hover\")
	UIRouter.connect(\"building_unhovered\", self, \"_on_unhover\")
	
func _on_hover(buildingId, buildingType):
	$Tween.remove_all()
	$Tween.interpolate_property(self, \"rect_position\", self.rect_position, visibleVector, 0.5, Tween.TRANS_SINE)
	$Tween.start()
	var _buildingProperties = GameState.buildingNodeFactory.getBuildingData(buildingType, buildingId)
	match buildingType:
		BuildingNodeFactory.TYPE.HOUSING:
			$RequiresIcon.texture = null
			$Requires.text = \"-\"
			$GrantsIcon.texture = popIcon
			$Grants.text = \"+\" + str(_buildingProperties.housingCapacity)
			$Name.text = nameIndex[BuildingNodeFactory.TYPE.HOUSING].get(buildingId, \"\")
		BuildingNodeFactory.TYPE.PRODUCTION:
			$RequiresIcon.texture = popIcon
			$Requires.text = \"x\" + str(-1 * _buildingProperties.housingCapacity)
			$GrantsIcon.texture = cashIcon
			$Grants.text = \"+\" + str(_buildingProperties.materialsPerSecond) + \"/s\"
			$Name.text = nameIndex[BuildingNodeFactory.TYPE.PRODUCTION].get(buildingId, \"\")
		BuildingNodeFactory.TYPE.RESEARCH:
			if  _buildingProperties.housingCapacity != 0:
				$RequiresIcon.texture = popIcon
				$Requires.text = \"x\" + str(-1 * _buildingProperties.housingCapacity)
			else:
				$RequiresIcon.texture = cashIcon
				$Requires.text = str(-1 * _buildingProperties.materialsPerSecond) + \"/s\"
			$GrantsIcon.texture = bookIcon
			$Grants.text = \"+\" + str(_buildingProperties.researchPerSecond) + \"/s\"
			$Name.text = nameIndex[BuildingNodeFactory.TYPE.RESEARCH].get(buildingId, \"\")

func _on_unhover(__, ___):
	$Tween.remove_all()
	$Tween.interpolate_property(self, \"rect_position\", self.rect_position, invisibleVector, 0.5, Tween.TRANS_SINE)
	$Tween.start()
"

[sub_resource type="StyleBoxFlat" id=30]
bg_color = Color( 0, 0, 0, 0.607843 )
corner_radius_top_left = 24
corner_radius_bottom_left = 24

[sub_resource type="GDScript" id=31]
script/source = "extends Panel

var visibleVector = Vector2(1216, 72)
var invisibleVector = Vector2(1280, 72)

func _ready():
	$\"../MessageBox\".connect(\"queue_empty\", self, \"_on_message_queue_empty\")
	GameState.connect(\"notification\", self, \"_on_notification\")
	$TextureButton.connect(\"pressed\", self, \"_on_pressed\")

func _on_message_queue_empty():
	$Tween.remove_all()
	$Tween.interpolate_property(self, \"rect_position\", rect_position, invisibleVector, 0.5, Tween.TRANS_SINE)
	$Tween.start()
	
func _on_notification(__):
	Audio.playSound(Audio.SOUND.PAPER)
	$Tween.remove_all()
	$Tween.interpolate_property(self, \"rect_position\", rect_position, visibleVector, 0.5, Tween.TRANS_SINE)
	$Tween.start()
	
func _on_pressed():
	$\"../MessageBox\".visible = true
"

[sub_resource type="GDScript" id=32]
script/source = "extends Control

const INTERVAL = 0.3
var _currentInterval = 0.0

var cursor:int = -1
onready var list:Array = []

var visibleVector = Vector2(0, 144)
var invisibleVector = Vector2(-330, 144)

var allUpgrades = false

func _ready():
	GameState.connect(\"game_paused_changed\", self, \"_on_pause_change\")
	$TitlePanel/Next.connect(\"pressed\", self, \"getNext\", [1])
	$TitlePanel/Previous.connect(\"pressed\", self, \"getNext\", [-1])
	$CostPanel/TextureButton.connect(\"pressed\", self, \"_on_research\")
	list = Progress.SKILLS.values()
	getNext()
	
func _physics_process(delta):
	_currentInterval += delta
	if _currentInterval >= INTERVAL:
		_currentInterval -= INTERVAL
		updatePanel()
	
func getNext(mod = 1):
	if cursor >= 0:
		Audio.playSound(Audio.SOUND.WEAK_CLICK)
	cursor = (len(list) + (cursor + mod)) % len(list)
	var _i = len(list)
	while _i > 0 and (GameState.skillProgress.hasSkill(list[cursor]) or !GameState.skillProgress.canLearn(list[cursor])):
		cursor = (len(list) + (cursor + mod)) % len(list)
		_i -= 1
	if _i <= 0:
		allUpgrades = true
		$Tween.remove_all()
		$Tween.interpolate_property(self, \"rect_position\", self.rect_position, invisibleVector, 0.5, Tween.TRANS_SINE)
		$Tween.start()
	else:
		updatePanel()
	
func updatePanel():
	var skill = GameState.skillProgress.skillDict.get(list[cursor])
	$TitlePanel/Label.text = skill.label
	$Description/Label.text = skill.description
	$CostPanel/TextureButton/Label.text = \"Research (Cost: \" + str(skill.cost) + \")\"
	if skill.cost > GameState.getResearch():
		$CostPanel.modulate = Color.red
	else:
		$CostPanel.modulate = Color.white

func _on_research():
	var skill = GameState.skillProgress.skillDict.get(list[cursor])
	if skill.cost <= GameState.getResearch():
		Audio.playSound(Audio.SOUND.CLICK)
		GameState.resources.changeResearch(-1 * skill.cost)
		GameState.skillProgress.activateSkill(list[cursor])
		getNext()
		updatePanel()

func _on_pause_change():
	if allUpgrades:
		return
	$Tween.remove_all()
	if get_tree().paused:
		$Tween.interpolate_property(self, \"rect_position\", self.rect_position, invisibleVector, 0.5, Tween.TRANS_SINE)
	else:
		$Tween.interpolate_property(self, \"rect_position\", self.rect_position, visibleVector, 0.5, Tween.TRANS_SINE)
	$Tween.start()
"

[sub_resource type="StyleBoxFlat" id=33]
bg_color = Color( 0, 0, 0, 0.607843 )
corner_radius_top_right = 24

[sub_resource type="DynamicFont" id=34]
size = 26
outline_size = 2
outline_color = Color( 0, 0, 0, 1 )
use_filter = true
font_data = ExtResource( 9 )

[sub_resource type="StyleBoxFlat" id=35]
bg_color = Color( 0, 0, 0, 0.607843 )

[sub_resource type="DynamicFont" id=36]
size = 20
outline_size = 2
outline_color = Color( 0, 0, 0, 1 )
use_filter = true
font_data = ExtResource( 9 )

[sub_resource type="StyleBoxFlat" id=37]
bg_color = Color( 0, 0, 0, 0.607843 )
corner_radius_bottom_right = 24

[sub_resource type="DynamicFont" id=45]
size = 26
outline_size = 2
outline_color = Color( 0, 0, 0, 1 )
use_filter = true
font_data = ExtResource( 9 )

[sub_resource type="GDScript" id=38]
script/source = "extends Control

signal queue_empty()

var messages = []

func _ready():
	GameState.connect(\"notification\", self, \"_on_notification\")
	self.connect(\"visibility_changed\", self, \"_on_show\")
	$Next.connect(\"pressed\", self, \"_on_next\")
	$Close.connect(\"pressed\", self, \"_on_close\")

func setText(text):
	$Panel/ScrollContainer/Label.text = text
	
func _on_notification(_message):
	messages.append(_message)
	
func _on_show():
	if visible:
		if len(messages) <= 0:
			self.visible = false
		else:
			GameState.pause()
			setText(messages.pop_front())
			$Next.visible = len(messages) > 0
			if len(messages) <= 0:
				emit_signal(\"queue_empty\")

func _on_next():
	setText(messages.pop_front())
	$Next.visible = len(messages) > 0
	if len(messages) <= 0:
		emit_signal(\"queue_empty\")
			
func _on_close():
	self.visible = false
	GameState.unpause()
"

[sub_resource type="StyleBoxFlat" id=39]
bg_color = Color( 0, 0, 0, 1 )
border_width_left = 4
border_width_top = 4
border_width_right = 4
border_width_bottom = 4
border_color = Color( 1, 1, 1, 1 )
border_blend = true
corner_radius_top_left = 24
corner_radius_top_right = 24
corner_radius_bottom_right = 24
corner_radius_bottom_left = 24

[sub_resource type="GDScript" id=40]
script/source = "extends Control


func _physics_process(_d):
	if !GameState.paused or visible:
		if Input.is_action_just_pressed(\"ui_pause\"):
			if visible:
				GameState.unpause()
				visible = false
			else:
				GameState.pause()
				visible = true
"

[sub_resource type="GDScript" id=41]
script/source = "extends Button


func _ready():
	self.connect(\"pressed\", self, \"_on_pressed\")

func _on_pressed():
	$\"..\".visible = false
	GameState.unpause()
	GameState.restart()
"

[sub_resource type="GDScript" id=42]
script/source = "extends Button


func _ready():
	self.connect(\"pressed\", self, \"_on_pressed\")
	
func _on_pressed():
	get_tree().quit()
"

[sub_resource type="GDScript" id=43]
script/source = "extends Control


func _ready():
	$AnimationPlayer.play(\"enter\")
	$TextureButton.connect(\"pressed\", self, \"_on_start\")
	
func _on_start():
	GameState.unpause()
	self.visible = false
"

[sub_resource type="Animation" id=44]
length = 2.0
tracks/0/type = "value"
tracks/0/path = NodePath("TextureRect:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("TextureRect2:rect_position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1, 2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 846.494, 724.963 ), Vector2( 846.494, 724.963 ), Vector2( 846.494, 631.963 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("TextureButton:self_modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 0 ), Color( 1, 1, 1, 1 ) ]
}

[node name="Game" type="Node"]
script = SubResource( 1 )

[node name="World" type="CanvasLayer" parent="."]
pause_mode = 1
follow_viewport_enable = true

[node name="Background" type="Polygon2D" parent="World"]
color = Color( 0.447059, 0.756863, 0.807843, 1 )
polygon = PoolVector2Array( -1280, -720, 2560, -720, 2560, 1440, -1280, 1440 )
script = SubResource( 2 )
__meta__ = {
"_edit_lock_": true
}

[node name="Tween" type="Tween" parent="World/Background"]

[node name="World" parent="World" instance=ExtResource( 1 )]
visible = false
position = Vector2( 640, 360 )
spinSpeed = 4
stableColor = Color( 0.105882, 0.47451, 0.0745098, 1 )

[node name="DoomsdayClock" type="Node2D" parent="World"]
visible = false
position = Vector2( 640, 360 )
script = SubResource( 3 )

[node name="Camera2D" type="Camera2D" parent="World"]
pause_mode = 2
position = Vector2( 640, 360 )
current = true
zoom = Vector2( 0.4, 0.4 )
script = SubResource( 4 )

[node name="Tween" type="Tween" parent="World/Camera2D"]

[node name="Timer" type="Timer" parent="World/Camera2D"]

[node name="UI" type="CanvasLayer" parent="."]
pause_mode = 2
layer = 2

[node name="UI" type="Control" parent="UI"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 0.307373
margin_top = -1.13232
margin_right = 0.307373
margin_bottom = -1.13232
mouse_filter = 1
theme = ExtResource( 2 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Numbers" type="Control" parent="UI/UI"]
anchor_left = 0.5
anchor_right = 0.5
margin_left = -288.0
mouse_filter = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="PopulationPanel" type="Panel" parent="UI/UI/Numbers"]
margin_left = 192.0
margin_right = 384.0
margin_bottom = 48.0
custom_styles/panel = SubResource( 5 )
script = SubResource( 6 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="UI/UI/Numbers/PopulationPanel"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 48.0
margin_top = -8.0
margin_right = -16.0
margin_bottom = -3.0
text = "234562"
align = 2
valign = 1
clip_text = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureRect" type="TextureRect" parent="UI/UI/Numbers/PopulationPanel"]
anchor_bottom = 1.0
margin_left = 8.0
margin_top = 8.0
margin_right = 40.0
margin_bottom = -8.0
texture = ExtResource( 3 )
expand = true
stretch_mode = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="PopulationPanel2" type="Panel" parent="UI/UI/Numbers"]
margin_left = 192.0
margin_top = 48.0
margin_right = 384.0
margin_bottom = 96.0
custom_styles/panel = SubResource( 5 )
script = SubResource( 7 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HSlider" type="HSlider" parent="UI/UI/Numbers/PopulationPanel2"]
anchor_right = 1.0
anchor_bottom = 1.0
max_value = 1.0
step = 0.05
value = 0.5
tick_count = 5
ticks_on_borders = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="MaterialsPanel" type="Panel" parent="UI/UI/Numbers"]
margin_right = 192.0
margin_bottom = 48.0
custom_styles/panel = SubResource( 8 )
script = SubResource( 9 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="UI/UI/Numbers/MaterialsPanel"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 48.0
margin_top = -8.46329
margin_right = -16.0
margin_bottom = -3.46329
text = "314567"
align = 2
valign = 1
clip_text = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureRect" type="TextureRect" parent="UI/UI/Numbers/MaterialsPanel"]
anchor_bottom = 1.0
margin_left = 8.0
margin_top = 8.0
margin_right = 40.0
margin_bottom = -8.0
texture = ExtResource( 4 )
expand = true
stretch_mode = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="MatChangePanel" type="Panel" parent="UI/UI/Numbers"]
margin_left = 32.0
margin_top = 48.0
margin_right = 192.0
margin_bottom = 96.0
custom_styles/panel = SubResource( 10 )
script = SubResource( 11 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="UI/UI/Numbers/MatChangePanel"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 8.0
margin_top = -8.46329
margin_right = -16.0
margin_bottom = -3.46329
text = "+4000/s"
align = 2
valign = 1
clip_text = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ResearchPanel" type="Panel" parent="UI/UI/Numbers"]
margin_left = 384.0
margin_right = 576.0
margin_bottom = 48.0
custom_styles/panel = SubResource( 12 )
script = SubResource( 13 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="UI/UI/Numbers/ResearchPanel"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 48.0
margin_top = -8.46329
margin_right = -16.0
margin_bottom = -3.46329
text = "314567"
align = 2
valign = 1
clip_text = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureRect" type="TextureRect" parent="UI/UI/Numbers/ResearchPanel"]
anchor_bottom = 1.0
margin_left = 8.0
margin_top = 8.0
margin_right = 40.0
margin_bottom = -8.0
texture = ExtResource( 5 )
expand = true
stretch_mode = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ResearchChangePanel2" type="Panel" parent="UI/UI/Numbers"]
margin_left = 384.0
margin_top = 48.0
margin_right = 544.0
margin_bottom = 96.0
custom_styles/panel = SubResource( 14 )
script = SubResource( 15 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="UI/UI/Numbers/ResearchChangePanel2"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 8.0
margin_top = -8.46329
margin_right = -16.0
margin_bottom = -3.46329
text = "+4000/s"
align = 2
valign = 1
clip_text = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ResearchEffectivity" type="Panel" parent="UI/UI/Numbers"]
margin_left = 384.0
margin_top = 96.0
margin_right = 512.0
margin_bottom = 120.0
custom_styles/panel = SubResource( 16 )
script = SubResource( 17 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ProgressBar" type="ProgressBar" parent="UI/UI/Numbers/ResearchEffectivity"]
self_modulate = Color( 0.733333, 0, 1, 1 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 8.0
margin_top = 1.0
margin_right = -8.0
margin_bottom = -4.0
size_flags_horizontal = 15
size_flags_vertical = 15
max_value = 1.0
value = 1.0
percent_visible = false
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Tween" type="Tween" parent="UI/UI/Numbers/ResearchEffectivity"]

[node name="MaterialEffectivity" type="Panel" parent="UI/UI/Numbers"]
margin_left = 64.0
margin_top = 96.0
margin_right = 192.0
margin_bottom = 120.0
custom_styles/panel = SubResource( 16 )
script = SubResource( 18 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ProgressBar" type="ProgressBar" parent="UI/UI/Numbers/MaterialEffectivity"]
self_modulate = Color( 1, 0.937255, 0, 1 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 8.0
margin_top = 1.0
margin_right = -8.0
margin_bottom = -4.0
size_flags_horizontal = 15
size_flags_vertical = 15
max_value = 1.0
value = 1.0
percent_visible = false
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Tween" type="Tween" parent="UI/UI/Numbers/MaterialEffectivity"]

[node name="BuildingButtons" type="Control" parent="UI/UI"]
script = SubResource( 19 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Zoom" type="Panel" parent="UI/UI"]
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
margin_left = -192.0
margin_top = -48.0
margin_right = 192.0
custom_styles/panel = SubResource( 20 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ZoomOut" type="Button" parent="UI/UI/Zoom"]
margin_left = 12.0
margin_right = 44.0
margin_bottom = 44.0
focus_mode = 0
enabled_focus_mode = 0
text = "-"
flat = true
script = SubResource( 21 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ZoomIn" type="Button" parent="UI/UI/Zoom"]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -44.0
margin_right = -12.0
margin_bottom = 48.0519
focus_mode = 0
enabled_focus_mode = 0
text = "+"
flat = true
script = SubResource( 22 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ZoomSlider" type="HSlider" parent="UI/UI/Zoom"]
anchor_left = 0.15
anchor_right = 0.85
margin_top = 16.0
margin_bottom = 48.0
max_value = 1.0
step = 0.05
tick_count = 11
ticks_on_borders = true
script = SubResource( 23 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Stats" type="Control" parent="UI/UI"]
margin_right = 40.0
margin_bottom = 40.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TimeControl" type="Panel" parent="UI/UI"]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -176.0
margin_bottom = 48.0
custom_styles/panel = SubResource( 24 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureButton" type="TextureButton" parent="UI/UI/TimeControl"]
self_modulate = Color( 1, 1, 1, 0.490196 )
anchor_left = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -56.0
margin_right = -8.0
focus_mode = 0
mouse_default_cursor_shape = 2
enabled_focus_mode = 0
texture_normal = ExtResource( 6 )
expand = true
script = SubResource( 25 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureButton2" type="TextureButton" parent="UI/UI/TimeControl"]
self_modulate = Color( 1, 1, 1, 0.490196 )
anchor_left = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -112.0
margin_right = -64.0
focus_mode = 0
mouse_default_cursor_shape = 2
enabled_focus_mode = 0
texture_normal = ExtResource( 7 )
expand = true
script = SubResource( 26 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureButton3" type="TextureButton" parent="UI/UI/TimeControl"]
self_modulate = Color( 1, 1, 1, 0.490196 )
anchor_left = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -168.0
margin_right = -120.0
focus_mode = 0
mouse_default_cursor_shape = 2
enabled_focus_mode = 0
texture_normal = ExtResource( 8 )
expand = true
script = SubResource( 27 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="BuildingInfo" type="Panel" parent="UI/UI"]
anchor_top = 0.3
anchor_right = 0.25
anchor_bottom = 0.8
margin_left = -320.0
margin_right = -320.0
custom_styles/panel = SubResource( 28 )
script = SubResource( 29 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Name" type="Label" parent="UI/UI/BuildingInfo"]
anchor_right = 1.0
margin_left = 8.0
margin_right = -8.0
margin_bottom = 53.0
text = "Production Plant"
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="RequiresHeader" type="Label" parent="UI/UI/BuildingInfo"]
margin_top = 56.0
margin_right = 8.0
margin_bottom = 53.0
text = "Requires"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="RequiresIcon" type="TextureRect" parent="UI/UI/BuildingInfo"]
margin_left = 42.0
margin_top = 113.0
margin_right = 106.0
margin_bottom = 177.0
texture = ExtResource( 3 )
expand = true
stretch_mode = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Requires" type="Label" parent="UI/UI/BuildingInfo"]
anchor_right = 1.0
margin_left = 110.0
margin_top = 120.935
margin_right = -8.0
margin_bottom = 176.0
text = "x32123"
valign = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="GrantsHeader" type="Label" parent="UI/UI/BuildingInfo"]
margin_top = 180.0
margin_right = 8.0
margin_bottom = 53.0
text = "Grants"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="GrantsIcon" type="TextureRect" parent="UI/UI/BuildingInfo"]
margin_left = 42.0
margin_top = 229.0
margin_right = 106.0
margin_bottom = 293.0
texture = ExtResource( 4 )
expand = true
stretch_mode = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Grants" type="Label" parent="UI/UI/BuildingInfo"]
anchor_right = 1.0
margin_left = 114.0
margin_top = 229.0
margin_right = -8.0
margin_bottom = 293.0
text = "+30/s"
valign = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Tween" type="Tween" parent="UI/UI/BuildingInfo"]

[node name="NotificationButton" type="Panel" parent="UI/UI"]
anchor_left = 1.0
anchor_top = 0.1
anchor_right = 1.0
anchor_bottom = 0.1
margin_right = 64.0
margin_bottom = 64.0
custom_styles/panel = SubResource( 30 )
script = SubResource( 31 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureButton" type="TextureButton" parent="UI/UI/NotificationButton"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 8.0
margin_top = 8.0
margin_right = -8.0
margin_bottom = -8.0
mouse_default_cursor_shape = 2
texture_normal = ExtResource( 10 )
expand = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Tween" type="Tween" parent="UI/UI/NotificationButton"]

[node name="Upgrades" type="Control" parent="UI/UI"]
anchor_top = 0.2
anchor_bottom = 0.2
margin_left = -330.0
margin_right = -3.05176e-05
margin_bottom = 424.0
script = SubResource( 32 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TitlePanel" type="Panel" parent="UI/UI/Upgrades"]
anchor_right = 1.0
margin_bottom = 99.0
custom_styles/panel = SubResource( 33 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="UI/UI/Upgrades/TitlePanel"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 64.0
margin_right = -64.0
custom_fonts/font = SubResource( 34 )
text = "Upgrade Name"
align = 1
autowrap = true
clip_text = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Previous" type="TextureButton" parent="UI/UI/Upgrades/TitlePanel"]
anchor_left = -0.097
anchor_top = -0.323
anchor_right = -0.097
anchor_bottom = -0.323
margin_left = 96.01
margin_top = 111.977
margin_right = 144.01
margin_bottom = 175.977
rect_rotation = 180.0
focus_mode = 0
mouse_default_cursor_shape = 2
shortcut_in_tooltip = false
enabled_focus_mode = 0
texture_normal = ExtResource( 8 )
expand = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Next" type="TextureButton" parent="UI/UI/Upgrades/TitlePanel"]
anchor_left = -0.097
anchor_top = -0.323
anchor_right = -0.097
anchor_bottom = -0.323
margin_left = 296.01
margin_top = 47.977
margin_right = 344.01
margin_bottom = 111.977
focus_mode = 0
mouse_default_cursor_shape = 2
shortcut_in_tooltip = false
enabled_focus_mode = 0
texture_normal = ExtResource( 8 )
expand = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Description" type="Panel" parent="UI/UI/Upgrades"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = 101.0
margin_bottom = -50.0
custom_styles/panel = SubResource( 35 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="UI/UI/Upgrades/Description"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 8.0
margin_right = -8.0
custom_fonts/font = SubResource( 36 )
text = "This contains a lot of text, that shows you what this upgrade does and stuff.
"
autowrap = true
clip_text = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CostPanel" type="Panel" parent="UI/UI/Upgrades"]
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = -48.0
margin_bottom = 2.0
custom_styles/panel = SubResource( 37 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureButton" type="TextureButton" parent="UI/UI/Upgrades/CostPanel"]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_default_cursor_shape = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureRect" type="TextureRect" parent="UI/UI/Upgrades/CostPanel/TextureButton"]
show_behind_parent = true
anchor_bottom = 1.0
margin_left = 2.0
margin_top = 2.0
margin_right = 48.0
margin_bottom = -2.0
texture = ExtResource( 5 )
expand = true
stretch_mode = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="UI/UI/Upgrades/CostPanel/TextureButton"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 48.0
margin_right = -8.0
custom_fonts/font = SubResource( 45 )
text = "Research (Cost: 44444)"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Tween" type="Tween" parent="UI/UI/Upgrades"]

[node name="MessageBox" type="Control" parent="UI/UI"]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
script = SubResource( 38 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect" type="ColorRect" parent="UI/UI/MessageBox"]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0, 0, 0, 0.607843 )

[node name="Panel" type="Panel" parent="UI/UI/MessageBox"]
anchor_left = 0.2
anchor_top = 0.1
anchor_right = 0.8
anchor_bottom = 0.8
custom_styles/panel = SubResource( 39 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ScrollContainer" type="ScrollContainer" parent="UI/UI/MessageBox/Panel"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 16.0
margin_top = 16.0
margin_right = -16.0
margin_bottom = -16.0
scroll_horizontal_enabled = false
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="UI/UI/MessageBox/Panel/ScrollContainer"]
margin_right = 729.0
margin_bottom = 53.0
rect_min_size = Vector2( 729, 0 )
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Close" type="Button" parent="UI/UI/MessageBox"]
anchor_left = 0.5
anchor_top = 0.8
anchor_right = 0.5
anchor_bottom = 0.8
margin_left = -64.0
margin_top = 16.0
margin_right = 64.0
margin_bottom = 64.0
focus_mode = 0
mouse_default_cursor_shape = 2
enabled_focus_mode = 0
text = " Seen "
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Next" type="Button" parent="UI/UI/MessageBox"]
visible = false
anchor_left = 0.8
anchor_top = 0.8
anchor_right = 0.8
anchor_bottom = 0.8
margin_left = -128.0
margin_top = 16.0
margin_bottom = 64.0
focus_mode = 0
mouse_default_cursor_shape = 2
enabled_focus_mode = 0
text = "Next"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Pause" type="CanvasLayer" parent="."]
pause_mode = 2
layer = 3

[node name="PauseMenu" type="Control" parent="Pause"]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
theme = ExtResource( 2 )
script = SubResource( 40 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect" type="ColorRect" parent="Pause/PauseMenu"]
modulate = Color( 1, 1, 1, 0.490196 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = -0.568787
margin_bottom = -0.568787
color = Color( 0, 0, 0, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Button" type="Button" parent="Pause/PauseMenu"]
anchor_left = 0.5
anchor_top = 0.4
anchor_right = 0.5
anchor_bottom = 0.4
margin_left = -96.0
margin_right = 96.0
margin_bottom = 20.0
focus_mode = 0
enabled_focus_mode = 0
text = "Restart"
script = SubResource( 41 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Button2" type="Button" parent="Pause/PauseMenu"]
anchor_left = 0.5
anchor_top = 0.55
anchor_right = 0.5
anchor_bottom = 0.55
margin_left = -96.0
margin_right = 96.0
margin_bottom = 20.0
focus_mode = 0
enabled_focus_mode = 0
text = "Quit"
script = SubResource( 42 )

[node name="StartScreen" type="CanvasLayer" parent="."]
layer = 5

[node name="Control" type="Control" parent="StartScreen"]
pause_mode = 2
anchor_right = 1.0
anchor_bottom = 1.0
script = SubResource( 43 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect" type="ColorRect" parent="StartScreen/Control"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = 40.0
margin_bottom = 40.0
color = Color( 0, 0, 0, 0.607843 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureButton" type="TextureButton" parent="StartScreen/Control"]
self_modulate = Color( 0, 0, 0, 0 )
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -62.7722
margin_top = -64.0
margin_right = 65.2278
margin_bottom = 64.0
mouse_default_cursor_shape = 2
texture_normal = ExtResource( 11 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureRect" type="TextureRect" parent="StartScreen/Control"]
self_modulate = Color( 1, 1, 1, 0 )
anchor_left = 0.5
anchor_right = 0.5
margin_left = -640.0
margin_top = 64.7076
margin_right = 640.0
margin_bottom = 320.708
texture = ExtResource( 12 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureRect2" type="TextureRect" parent="StartScreen/Control"]
margin_left = 846.494
margin_top = 724.963
margin_right = 1404.49
margin_bottom = 831.963
rect_scale = Vector2( 0.8, 0.8 )
texture = ExtResource( 13 )
expand = true
stretch_mode = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="StartScreen/Control"]
anims/enter = SubResource( 44 )
